[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.3.1\projects\491\drew-testing\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Espressif/frameworks/esp-idf-v5.3.1/projects/491/drew-testing/build/bootloader/bootloader.bin"
Bootloader binary size 0x54e0 bytes. 0x2b20 bytes (34%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/drew-testing.c.obj
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable drew-testing.elf
[6/7] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32c6 image...
Merged 1 ELF section
Successfully created esp32c6 image.
Generated C:/Espressif/frameworks/esp-idf-v5.3.1/projects/491/drew-testing/build/drew-testing.bin
[7/7] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.3.1\projects\491\drew-testing\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/esp-idf-v5.3.1/projects/491/drew-testing/build/partition_table/partition-table.bin C:/Espressif/frameworks/esp-idf-v5.3.1/projects/491/drew-testing/build/drew-testing.bin"
drew-testing.bin binary size 0x26410 bytes. Smallest app partition is 0x100000 bytes. 0xd9bf0 bytes (85%) free.
